App.IndexController=Ember.ArrayController.extend({userIsLoggedIn:!1,enteredUsername:null,loggedInUser:null,errorMsg:null,roles:["DPS","Tank","Healer"],classes:["Warrior","Stalker","Engineer","Spellslinger","Esper","Medic"],logRegVisible:!0,loginVisible:!1,registerVisible:!1,rulesVisible:!1,philosophyVisible:!1,newsVisible:!0,actions:{toggleLogin:function(){this.toggleProperty("loginVisible"),this.set("registerVisible",!1)},toggleRegister:function(){this.set("loginVisible",!1),this.toggleProperty("registerVisible")},toggleRules:function(){this.set("rulesVisible",!0),this.set("philosophyVisible",!1),this.set("newsVisible",!1)},togglePhilosophy:function(){this.set("philosophyVisible",!0),this.set("rulesVisible",!1),this.set("newsVisible",!1)},toggleNews:function(){this.set("rulesVisible",!1),this.set("philosophyVisible",!1),this.set("newsVisible",!0)},enterEvents:function(){var e,t;return e=this.get("loggedInUser.username"),t=this.get("model").findBy("username",e),null==t?(this.set("errorMsg","You need to log in first!"),Ember.run.later(this,function(){return this.set("errorMsg",null)},2e3)):this.transitionToRoute("events",{username:e})},register:function(){var e,t,s,n,r,i,l;return s=this.get("nu_username"),i=this.get("nu_password"),t=this.get("nu_mainRole"),r=this.get("nu_offRole"),e=this.get("nu_charclass"),l=this.get("model").findBy("username",s),null==s?(this.set("errorMsg","You must enter a username!"),Ember.run.later(this,function(){return this.set("errorMsg",null)},2e3)):null==l?(n=this.store.createRecord("user",{username:s,password:i,canCreateEvents:!1,charclass:e,mainRole:t,offRole:r,isProgression:!1}),n.save(),this.set("loggedInUser",n),this.set("enteredUsername",s),this.set("userIsLoggedIn",!0),this.set("logRegVisible",!1),this.set("loginVisible",!1),this.set("registerVisible",!1)):(this.set("errorMsg","User already exists!"),Ember.run.later(this,function(){return this.set("errorMsg",null)},2e3))},login:function(){var e,t,s,n;return e=this.get("enteredUsername"),t=this.get("enteredPassword"),s=this.get("model").findBy("username",e),n=null!=s?s.get("password"):void 0,null==s?(this.set("errorMsg","User does not exist!"),Ember.run.later(this,function(){return this.set("errorMsg",null)},2e3)):t!==n?(this.set("errorMsg","Incorrect password!"),Ember.run.later(this,function(){return this.set("errorMsg",null)},2e3)):(this.set("loggedInUser",s),this.set("userIsLoggedIn",!0),this.set("logRegVisible",!1),this.set("loginVisible",!1),this.set("registerVisible",!1))}}}),App.EventsUpcomingController=Ember.ArrayController.extend({sortProperties:["date"],sortAscending:!0,needs:"EventsIndex",eventsIndex:Ember.computed.alias("controllers.EventsIndex"),actions:{unsignup:function(e){return this.get("eventsIndex").send("unsignup",e)},signup:function(e){return this.get("eventsIndex").send("signup",e)}}}),App.EventsRegisteredController=Ember.ArrayController.extend({sortProperties:["date"],sortAscending:!0,needs:"EventsIndex",eventsIndex:Ember.computed.alias("controllers.EventsIndex"),actions:{unsignup:function(e){return this.get("eventsIndex").send("unsignup",e)}}}),App.EventsCompletedController=Ember.ArrayController.extend({sortProperties:["date"],sortAscending:!0,needs:"EventsIndex"}),App.EventsIndexController=Ember.ArrayController.extend({sortProperties:["date"],sortAscending:!0,needs:"index",index:Ember.computed.alias("controllers.index"),actions:{timeoutMessage:function(e,t,s){return e.set(t,s),Ember.run.later(this,function(){return e.set(t,null),e.save()},2e3)},unsignup:function(e){var t;t=this.get("index.loggedInUser"),e.get("participants").removeObject(t),e.save()},signup:function(e){var t,s,n,r,i,l,o,a,u,g,h,d,m,p,c,x,v,E,_,b;return E=this.get("index.loggedInUser"),r=this.get("index.loggedInUser.username"),n=this.get("index.loggedInUser.mainRole"),t=this.get("index.loggedInUser.charclass"),s=this.get("index.loggedInUser.isProgression"),b=!1,_=this.get("index.loggedInUser.dummyDPS"),v=e.get("requiredDPS"),p=e.get("numParticipants"),u=e.get("maxParticipants"),m=e.get("numHealers"),a=e.get("maxHealers"),c=e.get("numTanks"),g=e.get("maxTanks"),h=e.get("numDPS"),l=e.get("maxDPS"),o=e.get("maxH_esper"),d=e.get("numH_esper"),x=e.get("requiresProgression"),i=!1,e.get("participants").forEach(function(e){var t;return t=e.get("username"),t===r?b=!0:void 0}),b&&(this.send("timeoutMessage",e,"signupError","You're already in that event!"),i=!0),"DPS"===n&&v>_&&this.send("timeoutMessage",e,"signupError","Your DPS is too low for this event! Talk to an officer if the DPS in your profile is out of date."),x===!0&&s===!1&&(this.send("timeoutMessage",e,"signupError","You must be progression rank for this event!"),i=!0),i===!1&&e.get("participants").pushObject(this.get("index.loggedInUser")),e.save()}}}),App.EventsController=Ember.ArrayController.extend({needs:"index",index:Ember.computed.alias("controllers.index"),saveUserMsg:null,saveLogMsg:null,saveEventMsg:null,createEventError:null,profileVisible:!1,addEventVisible:!1,editEventVisible:!1,eventStatsVisible:!1,editUsersVisible:!1,eventTypes:["Stormtalon's Lair","Ruins of Kel'Voreth","Skullcano","Sanctuary of the Swordmaiden","Genetic Archives","Datascape","To Be Determined"],actions:{saveUser:function(e){return e.save(),this.set("saveUserMsg","Saved!"),Ember.run.later(this,function(){return this.set("saveUserMsg",null)},2e3)},deleteUser:function(e){return e.destroyRecord()},toggleProfile:function(){this.set("addEventVisible",!1),this.set("editEventVisible",!1),this.set("eventStatsVisible",!1),this.set("editUsersVisible",!1),this.toggleProperty("profileVisible")},toggleAddEvent:function(){this.set("profileVisible",!1),this.set("editEventVisible",!1),this.set("eventStatsVisible",!1),this.set("editUsersVisible",!1),this.toggleProperty("addEventVisible")},toggleEditEvent:function(){this.set("profileVisible",!1),this.set("addEventVisible",!1),this.set("eventStatsVisible",!1),this.set("editUsersVisible",!1),this.toggleProperty("editEventVisible")},toggleEventStats:function(){this.set("profileVisible",!1),this.set("addEventVisible",!1),this.set("editEventVisible",!1),this.set("editUsersVisible",!1),this.toggleProperty("eventStatsVisible")},toggleEditUsers:function(){this.set("profileVisible",!1),this.set("addEventVisible",!1),this.set("editEventVisible",!1),this.set("eventStatsVisible",!1),this.toggleProperty("editUsersVisible")},createEvent:function(){var e,t,s,n,r,i,l,o,a,u,g,h,d,m,p,c,x,v,E,_,b,f,V,I,M,P,S,y,U,k,D,R,A,C;return C=this.get("ne_title"),e=this.get("ne_date"),r=this.get("ne_leader"),A=this.get("ne_time"),t=moment(e+" "+A,"YYYY-MM-DD HH:mm").format("YYYY-MM-DD HH:mm"),n=new Date(t),s=this.get("ne_eventType"),U=this.get("ne_requiredDPS"),x=parseInt(this.get("ne_maxParticipants",10)),d=parseInt(this.get("ne_maxHealers",10)),p=parseInt(this.get("ne_healer_maxMedic",10)),m=parseInt(this.get("ne_healer_maxEsper",10)),c=parseInt(this.get("ne_healer_maxSpellslinger",10)),v=parseInt(this.get("ne_maxTanks",10)),_=parseInt(this.get("ne_tank_maxStalker",10)),b=parseInt(this.get("ne_tank_maxWarrior",10)),E=parseInt(this.get("ne_tank_maxEngineer",10)),i=parseInt(this.get("ne_maxDPS",10)),g=parseInt(this.get("ne_dps_maxStalker",10)),h=parseInt(this.get("ne_dps_maxWarrior",10)),l=parseInt(this.get("ne_dps_maxEngineer",10)),a=parseInt(this.get("ne_dps_maxMedic",10)),o=parseInt(this.get("ne_dps_maxEsper",10)),u=parseInt(this.get("ne_dps_maxSpellslinger",10)),f=d+v+i,R=parseInt(_+b+E),D=parseInt(p+m+c),k=parseInt(g+h+l+a+o+u),S=this.get("ne_requiresProgression"),y=this.get("ne_requiresRegFood"),M=this.get("ne_requiresBuffFood"),I=this.get("ne_requiresBoost"),P=this.get("ne_requiresMedkit"),null==C?this.set("createEventError","Must enter a title!"):null==e?this.set("createEventError","Must enter a date!"):null==A?this.set("createEventError","Must enter a time!"):null==x||""===x?this.set("createEventError","Must enter maximum event size!"):null==d||""===d?this.set("createEventError","Must enter number of healers!"):null==v||""===v?this.set("createEventError","Must enter number of tanks!"):null==i||""===i?this.set("createEventError","Must enter number of DPS!"):f!==x?this.set("createEventError","Maximum number of role slots ("+f+") doesn't equal maximum size of party ("+x+")!"):R>v?this.set("createEventError","Class maximums for tanks ("+sum_tank+") exceeds maximum number of tank slots ("+v+")!"):D>d?this.set("createEventError","Class maximums for healers ("+D+") exceeds maximum number of healer slots ("+d+")!"):k>i?this.set("createEventError","Class maximums for healers ("+k+") exceeds maximum number of healer slots ("+i+")!"):(V=this.store.createRecord("event",{title:C,date:n,type:s,leader:r,maxParticipants:x,maxTanks:v,maxT_stalker:_||null,maxT_warrior:b||null,maxT_engineer:E||null,maxHealers:d,maxH_medic:p||null,maxH_esper:m||null,maxH_spellslinger:c||null,maxDPS:i,maxD_stalker:g||null,maxD_warrior:h||null,maxD_engineer:l||null,maxD_medic:a||null,maxD_esper:o||null,maxD_spellslinger:u||null,requiresProgression:S,requiresRegFood:y,requiresBuffFood:M,requiresBoosts:I,requiresMedkits:P,requiredDPS:U}),V.save(),this.toggleProperty("addEventVisible"),this.set("ne_title",null),this.set("ne_date",null),this.set("ne_time",null),this.set("ne_maxParticipants",null),this.set("ne_maxHealers",null),this.set("ne_healer_maxSpellslinger",null),this.set("ne_healer_maxEsper",null),this.set("ne_healer_maxMedic",null),this.set("ne_maxTanks",null),this.set("ne_tank_maxEngineer",null),this.set("ne_tank_maxWarrior",null),this.set("ne_tank_maxStalker",null),this.set("ne_maxDPS",null),this.set("ne_dps_maxSpellslinger",null),this.set("ne_dps_maxEsper",null),this.set("ne_dps_maxMedic",null),this.set("ne_dps_maxEngineer",null),this.set("ne_dps_maxWarrior",null),this.set("ne_dps_maxStalker",null),this.set("createEventError",null))},logout:function(){return this.set("index.loggedInUser",null),this.set("index.userIsLoggedIn",!1),this.set("index.enteredUsername",null),this.transitionToRoute("index"),this.set("index.logRegVisible",!0),this.set("index.nu_username",null),this.set("index.nu_password",null)},deleteEvent:function(e){return e.destroyRecord()},saveEvent:function(e){return e.save(),this.set("saveEventMsg","Saved!"),Ember.run.later(this,function(){return this.set("saveEventMsg",null)},2e3)}}});